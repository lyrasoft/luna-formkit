{"version":3,"sources":["formkit.ts"],"names":[],"mappings":"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","file":"formkit.js","sourcesContent":["\nimport '@main';\n\nu.formValidation();\n\nclass FormkitHandler {\n  constructor(protected el: HTMLElement, protected uid: string) {\n    this.registerValidation();\n    this.replaceIds();\n    this.autoCheckOther();\n  }\n\n  async registerValidation() {\n    const form = this.el.querySelector('form')!;\n\n    const action = u.route('formkit.action.' + this.uid);\n    const button = this.el.querySelector<HTMLButtonElement>('[data-task=submit]')!;\n\n    button.addEventListener('click', () => {\n      form.action = action;\n      form.requestSubmit();\n\n      setTimeout(() => {\n        form.removeAttribute('action');\n      }, 500);\n    });\n\n    // 移除前次驗證的資訊\n    // grids.find('.invalid-tooltip').remove();\n    //\n    // grids.each((i, el) => {\n\n    // });\n    //\n\n    form.addEventListener('submit', (e) => {\n      let invalid = 0;\n      let scrollTarget: HTMLElement | undefined = undefined;\n      const $form = e.currentTarget as HTMLFormElement;\n\n      // 驗證選擇列表\n      // -----------------------------\n      const fields = $form.querySelectorAll<HTMLDivElement>('.input-list-container[required]');\n\n      // 驗證矩陣\n      // -----------------------------\n      const grids = form.querySelectorAll<HTMLElement>('.c-grid-scale[required]');\n\n      for (const grid of grids) {\n        const $rows = grid.querySelectorAll('tbody > tr');\n\n        // 移除前次驗證的資訊\n        grid.closest<HTMLElement>('.form-group')!.classList.remove('has-invalid');\n\n        for (const $row of $rows) {\n          const $inputs = Array.from(\n            $row.querySelectorAll<HTMLInputElement>('[type=checkbox], [type=radio]')\n          );\n          const checked = $inputs.filter((input) => input.checked);\n\n          // 移除前次驗證的資訊\n          // $row.closest('.form-group').removeClass('has-invalid');\n          $row.querySelector('.invalid-feedback')?.remove();\n\n          for (const $input of $inputs) {\n            $input.setCustomValidity('');\n          }\n\n          // 確認沒有勾選就產生錯誤提示\n          if (checked.length === 0) {\n            const text = u.__('unicorn.message.validation.value.missing');\n            const help = u.html(`<small class=\"invalid-feedback form-control-tooltip d-block\">${text}</small>`);\n\n            // 設定 HTML5 驗證結果\n            for (const $input of $inputs) {\n              $input.setCustomValidity(text);\n            }\n\n            // 插入提示\n            $row.querySelector('.c-row-text')!.appendChild(help);\n            grid.closest<HTMLElement>('.form-group')!.classList.add('has-invalid');\n\n            // 準備滑動到第一個物件\n            if (!scrollTarget) {\n              scrollTarget = grid;\n            }\n\n            invalid++;\n          }\n        }\n      }\n\n      if (invalid > 0) {\n        if (scrollTarget) {\n          scrollTarget.scrollIntoView();\n        }\n\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    });\n  }\n\n  replaceIds() {\n    const fields = this.el.querySelectorAll<HTMLElement>('.c-formkit-field');\n\n    for (const field of fields) {\n      const id = 'input-' + field.dataset.uid;\n\n      // $this.find('> [data-form-group]')\n      //   .attr('id', id + '-control')\n      //   .find('> label')\n      //   .attr('id', id + '-label')\n      //   .attr('for', id);\n    }\n  }\n\n  autoCheckOther() {\n    // this.$element.find('.c-other-input').on('input', (e) => {\n    //   const $this = $(e.currentTarget);\n    //   $this.closest('.radio, .checkbox').find('.c-other-option').prop('checked', true);\n    // });\n  }\n}\n\nu.directive(\n  'formkit',\n  {\n    mounted(el, { value }) {\n      u.module<any, HTMLElement>(el, 'formkit', (el) => new FormkitHandler(el, value))\n    }\n  }\n)\n"]}